name: Build and Deploy Microservices

on:
  push:
    branches:
      - main   # You can change to 'master' or any branch you want to trigger deployment

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: sahil-remoterepo
          password: ${{ secrets.UAT_GHCR }}   # Secret for your PAT

      # Build and push Billops
      - name: Build & Push Billops
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./billops/Dockerfile
          push: true
          tags: ghcr.io/sahil-remoterepo/billops:latest

      # Build and push Xamops
      - name: Build & Push Xamops
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./xamops-service/Dockerfile
          push: true
          tags: ghcr.io/sahil-remoterepo/xamops-service:latest

      # Build and push Service Registry
      - name: Build & Push Service Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./service-registry/Dockerfile
          push: true
          tags: ghcr.io/sahil-remoterepo/service-registry:latest

      # Build and push Frontend
      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend-app
          file: ./frontend-app/Dockerfile
          push: true
          tags: ghcr.io/sahil-remoterepo/frontend-app:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Configure AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Deploy containers on EC2 via SSM
      - name: Deploy containers on EC2
        run: |
          aws ssm send-command \
            --targets "Key=instanceIds,Values=i-0715da8b0b0b757e7" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy microservices" \
            --parameters commands='[
              "sudo docker login ghcr.io -u sahil-remoterepo -p ${{ secrets.UAT_GHCR }}",
              "sudo docker pull ghcr.io/sahil-remoterepo/billops:latest",
              "sudo docker pull ghcr.io/sahil-remoterepo/xamops-service:latest",
              "sudo docker pull ghcr.io/sahil-remoterepo/service-registry:latest",
              "sudo docker pull ghcr.io/sahil-remoterepo/frontend-app:latest",
              "sudo docker stop billops || true && sudo docker rm billops || true",
              "sudo docker stop xamops-service || true && sudo docker rm xamops-service || true",
              "sudo docker stop service-registry || true && sudo docker rm service-registry || true",
              "sudo docker stop frontend-app || true && sudo docker rm frontend-app || true",
              "sudo docker run -d --name billops ghcr.io/sahil-remoterepo/billops:latest",
              "sudo docker run -d --name xamops-service ghcr.io/sahil-remoterepo/xamops-service:latest",
              "sudo docker run -d --name service-registry ghcr.io/sahil-remoterepo/service-registry:latest",
              "sudo docker run -d --name frontend-app -p 80:80 ghcr.io/sahil-remoterepo/frontend-app:latest"
            ]'
